name: heroku

on:
  workflow_run:
    workflows: [tests]
    types: [completed]

jobs:

  build:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:

    - name: Checkout changes
      uses: actions/checkout@main

    - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
      uses: gonuit/heroku-docker-deploy@master # GitHub action name (leave it as it is).
      with:
        # Below you must provide variables for your Heroku app.

        # The email address associated with your Heroku account.
        # If you don't want to use repository secrets (which is recommended) you can do:
        # email: my.email@example.com
        email: "horneds@gmail.com"
        
        # Heroku API key associated with provided user's email.
        # Api Key is available under your Heroku account settings.
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        
        # Name of the heroku application to which the build is to be sent.
        heroku_app_name: "muffin-py"

        # (Optional, default: "./")
        # Dockerfile directory.
        # For example, if you have a Dockerfile in the root of your project, leave it as follows:
        dockerfile_directory: ./

        # (Optional, default: "Dockerfile")
        # Dockerfile name.
        dockerfile_name: ./devops/Dockerfile

        # (Optional, default: "")
        # Additional options of docker build command.
        docker_options: ""

        # (Optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, this argument is set to "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web
